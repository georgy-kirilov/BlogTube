@using BlogTube.Data
@model ArticleViewModel
@{
    string viewsText = Model.Views == 1 ? "view" : "views";
    const string SelectedVoteClassName = "selected-vote";
}

<div class="alert alert-light">
    <h1 class="h2">@Model.Title</h1>
    <div class="font-weight-bold text-info py-2"></div>
    <div class="alert alert-info py-3 col-6">
        Published by 
            <span class="font-italic font-weight-bold">@@@Model.AuthorName</span>
        on 
            <span class="font-italic">@Model.PublishedOn</span>
            <span class="text-uppercase font-weight-bold">@Model.CategoryName</span>
    </div>

    <p class="font-weight-normal">@Model.Body</p>

    <span class="alert alert-secondary">@Model.Views @viewsText</span>

    <button id="upvote-button"
            class="@if (Model.UserVoteType == VoteType.Up)@SelectedVoteClassName alert alert-secondary ml-2"
            onclick="vote('@Model.Id', true)">

        <i class="fa fa-thumbs-up">
            <span>@Model.Upvotes</span>
        </i>
    </button>

    <button id="downvote-button"
            class="@if (Model.UserVoteType == VoteType.Down)@SelectedVoteClassName alert alert-secondary"
            onclick="vote('@Model.Id', false)">

        <i class="fa fa-thumbs-down">
            <span>@Model.Downvotes</span>
        </i>
    </button>
</div>

<style>
    .@SelectedVoteClassName {
        background-color: gray;
        color: floralwhite;
    }
</style>

<script>
    function vote(articleId, isUp) {
        let token = $("#votesForm input[name=__RequestVerificationToken]").val();
        let json = { articleId: articleId, isUp: isUp };

        $.ajax({
            url: "/api/votes",
            type: "POST",
            data: JSON.stringify(json),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            headers: { "X-CSRF-TOKEN": token },
            success: function (data) {
                let subpath = ">i>span";
                let upvoteButtonId = "#upvote-button";
                let downvoteButtonId = "#downvote-button";

                $(`${upvoteButtonId}${subpath}`).text(data.upvotes);
                $(`${downvoteButtonId}${subpath}`).text(data.downvotes);

                $(upvoteButtonId).removeClass("@SelectedVoteClassName");
                $(downvoteButtonId).removeClass("@SelectedVoteClassName");

                if (data.isUpvoted) {
                    $(upvoteButtonId).addClass("@SelectedVoteClassName");
                }
                if (data.isDownvoted) {
                    $(downvoteButtonId).addClass("@SelectedVoteClassName");
                }
            }
        });
    }
</script>